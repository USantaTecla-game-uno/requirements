@startuml
'https://plantuml.com/class-diagram

package Application #Implementation
{
    package Domain #Business
    {
        class Entity
    }
    note top of Domain
    R. Martin, en el
    diagrama anterior,
    deja caer que el dominio
    puede estar envuelto
    por la aplicaciÃ³n
    end note

    UseCaseInteractor --> Entity
    
    UseCaseInteractor --|> InputBoundary 
    
    UseCaseInteractor ..> OutputData
    UseCaseInteractor --> OutputBoundary
   
    UseCaseInteractor --> Gateway
    
    interface InputBoundary
    interface OutputBoundary
    
    InputBoundary ..> InputData
    OutputBoundary ..> OutputData
    
    class InputData << (S, orange) Data structure>>
    class OutputData << (S, orange) Data structure>>
    
    interface Gateway
    Gateway ..> Entity
}

package "Infrastructure " #Application
{
    RepositoryDAO -u-|> Gateway
    RepositoryDAO -u-> Database    
}

package Adapters #Technology
{
    Controller .r.> InputData
    Controller -r-> InputBoundary
}

package Infrastructure #Application
{
    class ViewImplementation
}

package "Adapters " #Technology
{
    interface View
    ViewImplementation --|> View

    
    Presenter --|> OutputBoundary
    Presenter ..> OutputData
    
    Presenter ..> ViewModel
    Presenter --> View
    
    View ..> ViewModel
    
    class ViewModel << (S, orange) Data structure>>
}



@enduml